#!/usr/bin/env python3
import os
import discord
from discord.ext import commands
from yt_dlp import YoutubeDL
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
from dotenv import load_dotenv

load_dotenv()

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.voice_states = True

bot = commands.Bot(command_prefix='!', intents=intents)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Spotify
sp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(
    client_id=os.getenv('SPOTIPY_CLIENT_ID'),
    client_secret=os.getenv('SPOTIPY_CLIENT_SECRET'))
)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
music_queue = []
now_playing = None
paused = False


# –ö–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
class PlayerControls(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(emoji="‚èØ", style=discord.ButtonStyle.grey)
    async def pause_resume(self, interaction: discord.Interaction, button: discord.ui.Button):
        global paused
        voice_client = interaction.guild.voice_client

        if voice_client.is_playing():
            voice_client.pause()
            paused = True
            button.emoji = "‚ñ∂"
        elif voice_client.is_paused():
            voice_client.resume()
            paused = False
            button.emoji = "‚èØ"

        await interaction.response.edit_message(view=self)

    @discord.ui.button(emoji="‚è≠", style=discord.ButtonStyle.grey)
    async def skip(self, interaction: discord.Interaction, button: discord.ui.Button):
        voice_client = interaction.guild.voice_client
        if voice_client.is_playing() or voice_client.is_paused():
            voice_client.stop()
            await interaction.response.defer()

    @discord.ui.button(emoji="‚èπ", style=discord.ButtonStyle.red)
    async def stop(self, interaction: discord.Interaction, button: discord.ui.Button):
        voice_client = interaction.guild.voice_client
        if voice_client:
            await voice_client.disconnect()
            music_queue.clear()
            await interaction.response.send_message("‚èπ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            self.stop()


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è yt-dlp
ydl_opts = {
    'format': 'bestaudio/best',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
    'noplaylist': True,
}


@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user.name} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    await bot.change_presence(activity=discord.Activity(
        type=discord.ActivityType.listening,
        name="–º—É–∑—ã–∫—É | !help"
    ))


async def play_next(ctx):
    global now_playing, paused
    if music_queue:
        now_playing = music_queue.pop(0)
        source, info = now_playing

        ctx.voice_client.play(source, after=lambda e: bot.loop.create_task(play_next(ctx)))

        # –°–æ–∑–¥–∞–µ–º Embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        embed = discord.Embed(
            title="üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç",
            description=f"[{info['title']}]({info['webpage_url']})",
            color=0x00ff00
        )
        embed.set_thumbnail(url=info['thumbnail'])
        embed.add_field(name="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=info['duration_string'], inline=True)
        embed.add_field(name="–ó–∞–ø—Ä–æ—Å–∏–ª", value=ctx.author.mention, inline=True)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        view = PlayerControls()
        await ctx.send(embed=embed, view=view)
    else:
        now_playing = None


@bot.command()
async def play(ctx, *, query: str):
    """–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–∫"""
    global paused

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if not ctx.author.voice:
        return await ctx.send("‚ùå –í—ã –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")

    voice_channel = ctx.author.voice.channel

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É
    if not ctx.voice_client:
        await voice_channel.connect()
    else:
        await ctx.voice_client.move_to(voice_channel)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ Spotify
    if 'open.spotify.com' in query:
        try:
            track_info = sp.track(query)
            query = f"{track_info['name']} {track_info['artists'][0]['name']}"
        except Exception as e:
            return await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ Spotify: {e}")

    # –ü–æ–∏—Å–∫ –Ω–∞ YouTube
    with YoutubeDL(ydl_opts) as ydl:
        try:
            info = ydl.extract_info(f"ytsearch:{query}", download=False)['entries'][0]
        except Exception as e:
            return await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")

        url = info['url']
        source = discord.FFmpegPCMAudio(
            url,
            before_options="-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5"
        )

    music_queue.append((source, info))

    if not ctx.voice_client.is_playing() and not paused:
        await play_next(ctx)


@bot.command()
async def pause(ctx):
    """–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
    voice_client = ctx.voice_client
    if voice_client.is_playing():
        voice_client.pause()
        await ctx.send("‚è∏ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")


@bot.command()
async def resume(ctx):
    """–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
    voice_client = ctx.voice_client
    if voice_client.is_paused():
        voice_client.resume()
        await ctx.send("‚ñ∂ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ")


bot.run(os.getenv('DISCORD_TOKEN'))
